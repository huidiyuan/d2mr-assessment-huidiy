---
title: "Mini-Project 06_01_hello-world"
shorttitle: "MP06_01"
author: "Huidi Yuan"
date: today
format: 
  html: 
    toc: true
  pdf: 
    toc: true
execute:
  echo: false # set global chunk options
  warning: false # override these in individual chunks
---

# Hello World Project
## Load packages
```{r load-packages, include=TRUE}
# Load package
library(stringr)
```

## Hello world function
```{r hello-world, include=TRUE}
# Function: main function of hello world
hello_world <- function(raw_name, class_day, current_time = Sys.time()){
  # Convert the string to a POSIXct object
  date_time <- as.POSIXct(current_time, format="%Y-%m-%d %H:%M:%OS")
  
  # Format the POSIXct object to only include date and time up to minutes
  display_time <- format(date_time, "%Y-%m-%d %H:%M")
  current_hour <- as.numeric(format(current_time, "%H"))
  
  # Format raw_name to have the first letter capitalized and the rest lowercase
  name <- str_to_title(raw_name)
  
  # Assign random greeting
  greeting <- random_greeting()
  
  # Assign time of day based on current hour
  time_of_day <- time_transfer(current_hour)
  
  # Calculate days to class
  days_remain <- days_to_class(class_day)
  
  # Return message based on days to class
  if (days_remain == 0){
    return(paste0(greeting, " ", name, ", good ", time_of_day, "! ", "It is ", display_time, ". ", "You are having class today!"))
  }
  else if (days_remain == 1){
    return(paste0(greeting, " ", name, ", good ", time_of_day, "! ", "It is ", display_time, ". ", "You have class tomorrow!"))
  }
  else{
    return(paste0(greeting, " ", name, ", good ", time_of_day, "! ", "It is ", display_time, ". ", "You have ", days_remain, " days until class."))
  }
}
```

## Time of day function
```{r time, include=TRUE}
# Function: Assign time of day based on current hour
time_transfer <- function(current_hour){
  if (current_hour >= 6 && current_hour < 12) {
        "morning"
    } else if (current_hour >= 12 && current_hour < 18) {
        "afternoon"
    } else {
        "evening"
    }
}
```

## Random greeting function
```{r random-greeting, include=TRUE}
# Function: Assign random greeting words
random_greeting <- function(){
  greetings <- c("Hello", "Hi", "Hey", "Greetings", "Salutations") # list all greeting words
  return(sample(greetings, 1)) # randomly select one greeting word
}
```

## Calculate days to class
```{r days-to-class, include=TRUE}
# Function: Calculate days to class
days_to_class <- function(class_day){
  if (weekdays(Sys.Date()) %in% class_day){
    days_remain <- 0    # If today is class day, return days_remain = 0
  } else {
    course <- FALSE     # Set default value for while loop
    days_remain <- 1    # If today is not class day, start from days_remain = 1
    while (course == FALSE){ 
      if (weekdays(Sys.Date() + days_remain) %in% class_day){
        course <- TRUE  # Break loop
      } else {
        days_remain <- days_remain + 1 # Add 1 day to days_remain
      }
    }
  }
  return(days_remain)   # Return days_remain
}
```

# Run the function
```{r run-hello-world}
# Set your class day
class_day <- c("Monday", "Tuseday", "Thursday")

# Run hello_world function
hello_world("hUiDi", class_day)
```

